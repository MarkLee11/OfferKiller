apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "rabbitmq-ha.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "rabbitmq-ha.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "rabbitmq-ha.fullname" . }}-headless
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "rabbitmq-ha.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "rabbitmq-ha.selectorLabels" . | nindent 8 }}
        {{- with .Values.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: rabbitmq
        image: "{{ .Values.rabbitmq.image.registry }}/{{ .Values.rabbitmq.image.repository }}:{{ .Values.rabbitmq.image.tag }}"
        imagePullPolicy: {{ .Values.rabbitmq.image.pullPolicy }}
        ports:
        - containerPort: 5672
          name: amqp
        - containerPort: 5671
          name: amqp-tls
        - containerPort: 15672
          name: management
        - containerPort: 15692
          name: prometheus
        - containerPort: 25672
          name: clustering
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: {{ .Values.rabbitmq.auth.username | quote }}
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: {{ include "rabbitmq-ha.fullname" . }}-secret
              key: password
        - name: RABBITMQ_ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              name: {{ include "rabbitmq-ha.fullname" . }}-secret
              key: erlang-cookie
        - name: RABBITMQ_USE_LONGNAME
          value: "true"
        - name: RABBITMQ_NODENAME
          value: "rabbit@$(hostname).$(K8S_SERVICE_NAME).$(POD_NAMESPACE).svc.cluster.local"
        - name: K8S_SERVICE_NAME
          value: {{ include "rabbitmq-ha.fullname" . }}-headless
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: RABBITMQ_NODE_PORT
          value: "5672"
        volumeMounts:
        - name: data
          mountPath: /var/lib/rabbitmq
        - name: config
          mountPath: /etc/rabbitmq/rabbitmq.conf
          subPath: rabbitmq.conf
        - name: plugins
          mountPath: /etc/rabbitmq/enabled_plugins
          subPath: enabled_plugins
        {{- with .Values.rabbitmq.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          exec:
            command:
            - rabbitmq-diagnostics
            - ping
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          exec:
            command:
            - rabbitmq-diagnostics
            - check_port_connectivity
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ include "rabbitmq-ha.fullname" . }}-config
      - name: plugins
        configMap:
          name: {{ include "rabbitmq-ha.fullname" . }}-plugins
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: {{ .Values.rabbitmq.persistence.accessModes }}
      storageClassName: {{ .Values.rabbitmq.persistence.storageClass }}
      resources:
        requests:
          storage: {{ .Values.rabbitmq.persistence.size }}
