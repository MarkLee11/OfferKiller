# Redis Cluster Configuration
redis:
  image:
    registry: docker.io
    repository: redis
    tag: "7.2.0-alpine"
    pullPolicy: IfNotPresent
  
  # Cluster configuration
  cluster:
    enabled: true
    nodes: 6
    replicas: 1
    
  # Authentication
  auth:
    enabled: true
    password: "redis123change"
    existingSecret: ""
    existingSecretPasswordKey: ""
  
  # Resource configuration
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  
  # Persistence
  persistence:
    enabled: true
    storageClass: "standard"
    size: "8Gi"
    accessModes:
      - ReadWriteOnce
  
  # Configuration
  configuration: |
    # Network
    bind 0.0.0.0
    port 6379
    tcp-keepalive 300
    
    # Memory management
    maxmemory 400mb
    maxmemory-policy allkeys-lru
    
    # Persistence
    save 900 1
    save 300 10
    save 60 10000
    
    # Cluster
    cluster-enabled yes
    cluster-config-file nodes.conf
    cluster-node-timeout 5000
    
    # Logging
    loglevel notice
    
    # Security
    protected-mode no

# Redis Sentinel Configuration
sentinel:
  enabled: true
  image:
    registry: docker.io
    repository: redis
    tag: "7.2.0-alpine"
  
  # Sentinel specific configuration
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "128Mi"
      cpu: "100m"
  
  configuration: |
    port 26379
    sentinel monitor redis-master redis-node-0.redis.offerkiller-data.svc.cluster.local 6379 2
    sentinel down-after-milliseconds redis-master 5000
    sentinel parallel-syncs redis-master 1
    sentinel failover-timeout redis-master 10000

# Service configuration
service:
  type: ClusterIP
  port: 6379
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "6379"

# ServiceMonitor for Prometheus
serviceMonitor:
  enabled: true
  labels:
    app: redis-cluster
  interval: 30s
  path: /metrics

# Network Policy
networkPolicy:
  enabled: true
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            name: offerkiller-app
      - namespaceSelector:
          matchLabels:
            name: offerkiller-system
      ports:
      - protocol: TCP
        port: 6379
      - protocol: TCP
        port: 26379

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 2

# Horizontal Pod Autoscaler
autoscaling:
  enabled: false
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Security Context
securityContext:
  runAsNonRoot: true
  runAsUser: 999
  fsGroup: 999

# Affinity and tolerations
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchLabels:
            app: redis-cluster
        topologyKey: kubernetes.io/hostname

# Additional labels
labels:
  app: redis-cluster
  version: "7.2.0"
  component: cache

# Backup configuration
backup:
  enabled: true
  schedule: "0 2 * * *"
  retention: "7d"
  storage:
    storageClass: "standard"
    size: "5Gi"

# Replicas configuration
replicaCount: 3
